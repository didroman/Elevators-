Модель системы:
Здание с F этажами и двумя лифтами. Имеются кнопки вызова лифтов на каждом этаже и панель управления внутри лифтов с кнопками каждого этажа и кнопкой срочной остановки (STOP).

Необходимо обеспечить доставку лифтов на этажи соответственно нажатым кнопкам
обеспечить подачу лифтов в минимальный срок после нажатия на кнопку
минимизировав случаи переполнение лифтов
минимизировав лишний пробег лифтов
исключить случаи недоставки лифта по вызову

Переменные:
1. F – количество этажей.
2. Pi – состояние кнопки вызова на i-м этаже. *(1 - нажата, 0 - не нажата)*
3. Mi, Ni – состояние кнопки i-го этажа в лифте1 и лифте2 *(1 - нажата, 0 - не нажата)*
4. Ei1, Ei2 – текущий этаж лифта1 и лифта2.
5. A1, A2 – состояние лифта1 и лифта2 (в движении, неподвижен, простой).
6. S1, S2 - состояние кнопки STOP лифте1 и лифте2. *(1 - нажата, 0 - не нажата)
7. T - единица времени для вычисления длины маршрутов, за 1 цикл лифт перемещается на 1 этаж, или "простаивает"

Алгоритмы контроллеров:
⦁ *Кнопки Mi, Ni и Pi при нажатии принимают состояние "нажата", внутренние и внешний контроллеры хранят очередность нажатий (у каждого внутреннего контроллера очередь индивидуальная), приоритет выполнения у очереди внутреннего контроллера (для избежания переполнения лифта), в случае опустошения очереди внутреннего контроллера, инициатива переходит к очереди внешнего контроллера.
⦁ После прибытия лифта на этаж (что характеризуется состоянием A1, A2 = простой), кнопки принимают состояние "не нажата", и удаляются из очереди*

1. Внутренний контроллер:
• Если лифт (A1) = неподвижен, он берет задание из очереди.
• Если лифт (A1) = в движении, он сравнивает текущий этаж (Ei1) со всей очередью заданий своего внутреннего и внешнего контроллеров (Mi и Pi). В случае совпадения, осуществляет остановку на 1 цикл (A1, A2 = простой), после чего продолжает движение
• При нажатии кнопки STOP, лифт останавливается 1 цикл (A1, A2 = простой). Посде чего выполнение заданий продолжается
• Каждый цикл производится вычисление общей длины всех маршрутов по очереди для данного внутреннего контроллера (Ei1-Mi=|x|+1)+ (Ei1-Mi=|y|+1)+(Nмаршрут) = Z и при необходимости передается на внешний контроллер. Это неэффективный расчет так как он просто считает растояния маршрутов по очереди не учитывая фактора выполнения некоторых отложенных маршрутов в процессе движения, просто минимально жизнеспособный на данном этапе. Нужно сформулировать расчет при котором проверяется наличие всех этажей назначений (Mi) внутри отрезка (Ei1>Mi) выполняемого маршрута, с удалением выполнящихся по мере движения, после чего тоже для отрезка следующего по очереди маршрута, и следующего... (Пока не сформулировал точнее)

2. Внешний контроллер:
• Если оба лифта свободны, самый близкий к этажу вызова получает задание из очереди внешнего контроллера.
• Если один лифт свободен, другой занят, свободный лифт получает задание, если он "ближе" к этажу взова, чем точка окончания последнего в очереди маршрута подвижного лифта + Z подвижного лифта
• Если оба лифта заняты, завершение цикла
